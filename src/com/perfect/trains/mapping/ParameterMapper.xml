<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfect.trains.mapper.ParameterMapper" >
  <resultMap id="BaseResultMap" type="com.perfect.trains.model.Parameter" >
    <id column="parameter_id" property="id" />
    <result column="parameter_index" property="index" jdbcType="INTEGER" />
    <result column="parameter_parent_name" property="parentName" jdbcType="VARCHAR" />
    <result column="parameter_name" property="name" jdbcType="VARCHAR" />
    <result column="parameter_format" property="format" jdbcType="VARCHAR" />
    <result column="parameter_unit" property="unit" jdbcType="VARCHAR" />
    <result column="parameter_type" property="type" jdbcType="VARCHAR" />
    <result column="parameter_owner" property="owner" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    parameter.id as parameter_id, parameter.`index` as `parameter_index`, parameter.parent_name as parameter_parent_name, 
    parameter.`name` as `parameter_name`, parameter.format as parameter_format, parameter.unit as parameter_unit, 
    parameter.`type` as `parameter_type`, parameter.`owner` as `parameter_owner`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.perfect.trains.model.ParameterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parameter parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from parameter parameter
    where parameter.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete parameter from parameter parameter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.perfect.trains.model.ParameterExample" >
    delete parameter from parameter parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.perfect.trains.model.Parameter" useGeneratedKeys="true" keyProperty="id" >
    insert into parameter (`index`, parent_name, `name`, 
      format, unit, `type`, 
      `owner`)
    values (#{index,jdbcType=INTEGER}, #{parentName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{format,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{owner,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.perfect.trains.model.Parameter" useGeneratedKeys="true" keyProperty="id" >
    insert into parameter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="index != null" >
        `index`,
      </if>
      <if test="parentName != null" >
        parent_name,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="format != null" >
        format,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="owner != null" >
        `owner`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="index != null" >
        #{index,jdbcType=INTEGER},
      </if>
      <if test="parentName != null" >
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="format != null" >
        #{format,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.perfect.trains.model.ParameterExample" resultType="java.lang.Integer" >
    select count(*) from parameter parameter
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update parameter parameter
    <set >
      <if test="record.id != null" >
        parameter.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.index != null" >
        parameter.`index` = #{record.index,jdbcType=INTEGER},
      </if>
      <if test="record.parentName != null" >
        parameter.parent_name = #{record.parentName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        parameter.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.format != null" >
        parameter.format = #{record.format,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        parameter.unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        parameter.`type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.owner != null" >
        parameter.`owner` = #{record.owner,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update parameter parameter
    set parameter.id = #{record.id,jdbcType=BIGINT},
      parameter.`index` = #{record.index,jdbcType=INTEGER},
      parameter.parent_name = #{record.parentName,jdbcType=VARCHAR},
      parameter.`name` = #{record.name,jdbcType=VARCHAR},
      parameter.format = #{record.format,jdbcType=VARCHAR},
      parameter.unit = #{record.unit,jdbcType=VARCHAR},
      parameter.`type` = #{record.type,jdbcType=VARCHAR},
      parameter.`owner` = #{record.owner,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.perfect.trains.model.Parameter" >
    update parameter
    <set >
      <if test="index != null" >
        `index` = #{index,jdbcType=INTEGER},
      </if>
      <if test="parentName != null" >
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="format != null" >
        format = #{format,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="owner != null" >
        `owner` = #{owner,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.perfect.trains.model.Parameter" >
    update parameter
    set `index` = #{index,jdbcType=INTEGER},
      parent_name = #{parentName,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      format = #{format,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      `owner` = #{owner,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
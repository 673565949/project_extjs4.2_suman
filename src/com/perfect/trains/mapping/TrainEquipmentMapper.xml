<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfect.trains.mapper.TrainEquipmentMapper" >
  <resultMap id="BaseResultMap" type="com.perfect.trains.model.TrainEquipment" >
    <id column="trainEquipment_id" property="id" />
    <result column="trainEquipment_equipment_classification_id" property="equipmentClassificationId" jdbcType="BIGINT" />
    <result column="trainEquipment_train_id" property="trainId" jdbcType="BIGINT" />
    <result column="trainEquipment_equipment_id" property="equipmentId" jdbcType="BIGINT" />
    <result column="trainEquipment_up_date" property="upDate" jdbcType="DATE" />
    <result column="trainEquipment_plugin_Type" property="pluginType" jdbcType="VARCHAR" />
    <result column="trainEquipment_equipment_parent_classification_id" property="equipmentParentClassificationId" jdbcType="BIGINT" />
    <result column="trainEquipment_parent_plugin_Type" property="parentPluginType" jdbcType="VARCHAR" />
    <result column="trainEquipment_down_reason" property="downReason" jdbcType="VARCHAR" />
    <result column="trainEquipment_down_date" property="downDate" jdbcType="DATE" />
    <result column="trainEquipment_equipment_parent_id" property="equipmentParentId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    trainEquipment.id as trainEquipment_id, trainEquipment.equipment_classification_id as trainEquipment_equipment_classification_id, 
    trainEquipment.train_id as trainEquipment_train_id, trainEquipment.equipment_id as trainEquipment_equipment_id, 
    trainEquipment.up_date as trainEquipment_up_date, trainEquipment.plugin_Type as trainEquipment_plugin_Type, 
    trainEquipment.equipment_parent_classification_id as trainEquipment_equipment_parent_classification_id, 
    trainEquipment.parent_plugin_Type as trainEquipment_parent_plugin_Type, trainEquipment.down_reason as trainEquipment_down_reason, 
    trainEquipment.down_date as trainEquipment_down_date, trainEquipment.equipment_parent_id as trainEquipment_equipment_parent_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.perfect.trains.model.TrainEquipmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from train_equipment trainEquipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from train_equipment trainEquipment
    where trainEquipment.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete trainEquipment from train_equipment trainEquipment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.perfect.trains.model.TrainEquipmentExample" >
    delete trainEquipment from train_equipment trainEquipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.perfect.trains.model.TrainEquipment" useGeneratedKeys="true" keyProperty="id" >
    insert into train_equipment (equipment_classification_id, train_id, 
      equipment_id, up_date, plugin_Type, 
      equipment_parent_classification_id, parent_plugin_Type, 
      down_reason, down_date, equipment_parent_id
      )
    values (#{equipmentClassificationId,jdbcType=BIGINT}, #{trainId,jdbcType=BIGINT}, 
      #{equipmentId,jdbcType=BIGINT}, #{upDate,jdbcType=DATE}, #{pluginType,jdbcType=VARCHAR}, 
      #{equipmentParentClassificationId,jdbcType=BIGINT}, #{parentPluginType,jdbcType=VARCHAR}, 
      #{downReason,jdbcType=VARCHAR}, #{downDate,jdbcType=DATE}, #{equipmentParentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.perfect.trains.model.TrainEquipment" useGeneratedKeys="true" keyProperty="id" >
    insert into train_equipment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="equipmentClassificationId != null" >
        equipment_classification_id,
      </if>
      <if test="trainId != null" >
        train_id,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
      <if test="upDate != null" >
        up_date,
      </if>
      <if test="pluginType != null" >
        plugin_Type,
      </if>
      <if test="equipmentParentClassificationId != null" >
        equipment_parent_classification_id,
      </if>
      <if test="parentPluginType != null" >
        parent_plugin_Type,
      </if>
      <if test="downReason != null" >
        down_reason,
      </if>
      <if test="downDate != null" >
        down_date,
      </if>
      <if test="equipmentParentId != null" >
        equipment_parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="equipmentClassificationId != null" >
        #{equipmentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="trainId != null" >
        #{trainId,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="upDate != null" >
        #{upDate,jdbcType=DATE},
      </if>
      <if test="pluginType != null" >
        #{pluginType,jdbcType=VARCHAR},
      </if>
      <if test="equipmentParentClassificationId != null" >
        #{equipmentParentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="parentPluginType != null" >
        #{parentPluginType,jdbcType=VARCHAR},
      </if>
      <if test="downReason != null" >
        #{downReason,jdbcType=VARCHAR},
      </if>
      <if test="downDate != null" >
        #{downDate,jdbcType=DATE},
      </if>
      <if test="equipmentParentId != null" >
        #{equipmentParentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.perfect.trains.model.TrainEquipmentExample" resultType="java.lang.Integer" >
    select count(*) from train_equipment trainEquipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update train_equipment trainEquipment
    <set >
      <if test="record.id != null" >
        trainEquipment.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.equipmentClassificationId != null" >
        trainEquipment.equipment_classification_id = #{record.equipmentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="record.trainId != null" >
        trainEquipment.train_id = #{record.trainId,jdbcType=BIGINT},
      </if>
      <if test="record.equipmentId != null" >
        trainEquipment.equipment_id = #{record.equipmentId,jdbcType=BIGINT},
      </if>
      <if test="record.upDate != null" >
        trainEquipment.up_date = #{record.upDate,jdbcType=DATE},
      </if>
      <if test="record.pluginType != null" >
        trainEquipment.plugin_Type = #{record.pluginType,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentParentClassificationId != null" >
        trainEquipment.equipment_parent_classification_id = #{record.equipmentParentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="record.parentPluginType != null" >
        trainEquipment.parent_plugin_Type = #{record.parentPluginType,jdbcType=VARCHAR},
      </if>
      <if test="record.downReason != null" >
        trainEquipment.down_reason = #{record.downReason,jdbcType=VARCHAR},
      </if>
      <if test="record.downDate != null" >
        trainEquipment.down_date = #{record.downDate,jdbcType=DATE},
      </if>
      <if test="record.equipmentParentId != null" >
        trainEquipment.equipment_parent_id = #{record.equipmentParentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update train_equipment trainEquipment
    set trainEquipment.id = #{record.id,jdbcType=BIGINT},
      trainEquipment.equipment_classification_id = #{record.equipmentClassificationId,jdbcType=BIGINT},
      trainEquipment.train_id = #{record.trainId,jdbcType=BIGINT},
      trainEquipment.equipment_id = #{record.equipmentId,jdbcType=BIGINT},
      trainEquipment.up_date = #{record.upDate,jdbcType=DATE},
      trainEquipment.plugin_Type = #{record.pluginType,jdbcType=VARCHAR},
      trainEquipment.equipment_parent_classification_id = #{record.equipmentParentClassificationId,jdbcType=BIGINT},
      trainEquipment.parent_plugin_Type = #{record.parentPluginType,jdbcType=VARCHAR},
      trainEquipment.down_reason = #{record.downReason,jdbcType=VARCHAR},
      trainEquipment.down_date = #{record.downDate,jdbcType=DATE},
      trainEquipment.equipment_parent_id = #{record.equipmentParentId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.perfect.trains.model.TrainEquipment" >
    update train_equipment
    <set >
      <if test="equipmentClassificationId != null" >
        equipment_classification_id = #{equipmentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="trainId != null" >
        train_id = #{trainId,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null" >
        equipment_id = #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="upDate != null" >
        up_date = #{upDate,jdbcType=DATE},
      </if>
      <if test="pluginType != null" >
        plugin_Type = #{pluginType,jdbcType=VARCHAR},
      </if>
      <if test="equipmentParentClassificationId != null" >
        equipment_parent_classification_id = #{equipmentParentClassificationId,jdbcType=BIGINT},
      </if>
      <if test="parentPluginType != null" >
        parent_plugin_Type = #{parentPluginType,jdbcType=VARCHAR},
      </if>
      <if test="downReason != null" >
        down_reason = #{downReason,jdbcType=VARCHAR},
      </if>
      <if test="downDate != null" >
        down_date = #{downDate,jdbcType=DATE},
      </if>
      <if test="equipmentParentId != null" >
        equipment_parent_id = #{equipmentParentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.perfect.trains.model.TrainEquipment" >
    update train_equipment
    set equipment_classification_id = #{equipmentClassificationId,jdbcType=BIGINT},
      train_id = #{trainId,jdbcType=BIGINT},
      equipment_id = #{equipmentId,jdbcType=BIGINT},
      up_date = #{upDate,jdbcType=DATE},
      plugin_Type = #{pluginType,jdbcType=VARCHAR},
      equipment_parent_classification_id = #{equipmentParentClassificationId,jdbcType=BIGINT},
      parent_plugin_Type = #{parentPluginType,jdbcType=VARCHAR},
      down_reason = #{downReason,jdbcType=VARCHAR},
      down_date = #{downDate,jdbcType=DATE},
      equipment_parent_id = #{equipmentParentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
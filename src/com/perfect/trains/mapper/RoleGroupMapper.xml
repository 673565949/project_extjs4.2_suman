<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfect.trains.mapper.RoleGroupMapper" >
  <resultMap id="BaseResultMap" type="com.perfect.trains.model.RoleGroup" >
    <id column="rolegroup_id" property="id" />
    <result column="rolegroup_name" property="name" jdbcType="VARCHAR" />
    <result column="rolegroup_leaf" property="leaf" jdbcType="INTEGER" />
    <result column="rolegroup_code" property="code" jdbcType="VARCHAR" />
    <result column="rolegroup_parent_code" property="parentCode" jdbcType="VARCHAR" />
    <result column="rolegroup_sort_index" property="sortIndex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rolegroup.id as rolegroup_id, rolegroup.`name` as `rolegroup_name`, rolegroup.leaf as rolegroup_leaf, 
    rolegroup.code as rolegroup_code, rolegroup.parent_code as rolegroup_parent_code, 
    rolegroup.sort_index as rolegroup_sort_index
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.perfect.trains.model.RoleGroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rolegroup rolegroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rolegroup rolegroup
    where rolegroup.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete rolegroup from rolegroup rolegroup
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.perfect.trains.model.RoleGroupExample" >
    delete rolegroup from rolegroup rolegroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.perfect.trains.model.RoleGroup" useGeneratedKeys="true" keyProperty="id" >
    insert into rolegroup (`name`, leaf, code, 
      parent_code, sort_index)
    values (#{name,jdbcType=VARCHAR}, #{leaf,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{parentCode,jdbcType=VARCHAR}, #{sortIndex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.perfect.trains.model.RoleGroup" useGeneratedKeys="true" keyProperty="id" >
    insert into rolegroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        `name`,
      </if>
      <if test="leaf != null" >
        leaf,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="parentCode != null" >
        parent_code,
      </if>
      <if test="sortIndex != null" >
        sort_index,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="leaf != null" >
        #{leaf,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null" >
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null" >
        #{sortIndex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.perfect.trains.model.RoleGroupExample" resultType="java.lang.Integer" >
    select count(*) from rolegroup rolegroup
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rolegroup rolegroup
    <set >
      <if test="record.id != null" >
        rolegroup.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        rolegroup.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.leaf != null" >
        rolegroup.leaf = #{record.leaf,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        rolegroup.code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCode != null" >
        rolegroup.parent_code = #{record.parentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.sortIndex != null" >
        rolegroup.sort_index = #{record.sortIndex,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rolegroup rolegroup
    set rolegroup.id = #{record.id,jdbcType=BIGINT},
      rolegroup.`name` = #{record.name,jdbcType=VARCHAR},
      rolegroup.leaf = #{record.leaf,jdbcType=INTEGER},
      rolegroup.code = #{record.code,jdbcType=VARCHAR},
      rolegroup.parent_code = #{record.parentCode,jdbcType=VARCHAR},
      rolegroup.sort_index = #{record.sortIndex,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.perfect.trains.model.RoleGroup" >
    update rolegroup
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="leaf != null" >
        leaf = #{leaf,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null" >
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="sortIndex != null" >
        sort_index = #{sortIndex,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.perfect.trains.model.RoleGroup" >
    update rolegroup
    set `name` = #{name,jdbcType=VARCHAR},
      leaf = #{leaf,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      parent_code = #{parentCode,jdbcType=VARCHAR},
      sort_index = #{sortIndex,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfect.trains.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.perfect.trains.model.User" >
    <id column="sys_user_id" property="id" />
    <result column="sys_user_login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="sys_user_name" property="name" jdbcType="VARCHAR" />
    <result column="sys_user_password" property="password" jdbcType="VARCHAR" />
    <result column="sys_user_mail" property="mail" jdbcType="VARCHAR" />
    <result column="sys_user_department_id" property="departmentId" jdbcType="BIGINT" />
    <result column="sys_user_phone" property="phone" jdbcType="VARCHAR" />
    <result column="sys_user_permission_group" property="permissionGroup" jdbcType="VARCHAR" />
    <result column="sys_user_status" property="status" jdbcType="VARCHAR" />
    <result column="sys_user_employeeId" property="employeeid" jdbcType="VARCHAR" />
    <result column="sys_user_rask" property="rask" jdbcType="VARCHAR" />
    <result column="sys_user_department_code" property="departmentCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sys_user.id as sys_user_id, sys_user.login_id as sys_user_login_id, sys_user.`name` as `sys_user_name`, 
    sys_user.`password` as `sys_user_password`, sys_user.mail as sys_user_mail, sys_user.department_id as sys_user_department_id, 
    sys_user.phone as sys_user_phone, sys_user.permission_group as sys_user_permission_group, 
    sys_user.`status` as `sys_user_status`, sys_user.employeeId as sys_user_employeeId, 
    sys_user.rask as sys_user_rask, sys_user.department_code as sys_user_department_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.perfect.trains.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user sys_user
    where sys_user.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete sys_user from user sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.perfect.trains.model.UserExample" >
    delete sys_user from user sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.perfect.trains.model.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user (login_id, `name`, `password`, 
      mail, department_id, phone, 
      permission_group, `status`, employeeId, 
      rask, department_code)
    values (#{loginId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{departmentId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, 
      #{permissionGroup,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{employeeid,jdbcType=VARCHAR}, 
      #{rask,jdbcType=VARCHAR}, #{departmentCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.perfect.trains.model.User" useGeneratedKeys="true" keyProperty="id" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="permissionGroup != null" >
        permission_group,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
      <if test="rask != null" >
        rask,
      </if>
      <if test="departmentCode != null" >
        department_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="permissionGroup != null" >
        #{permissionGroup,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="rask != null" >
        #{rask,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null" >
        #{departmentCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.perfect.trains.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user sys_user
    <set >
      <if test="record.id != null" >
        sys_user.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null" >
        sys_user.login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        sys_user.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        sys_user.`password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        sys_user.mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null" >
        sys_user.department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null" >
        sys_user.phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionGroup != null" >
        sys_user.permission_group = #{record.permissionGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        sys_user.`status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeid != null" >
        sys_user.employeeId = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.rask != null" >
        sys_user.rask = #{record.rask,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentCode != null" >
        sys_user.department_code = #{record.departmentCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user sys_user
    set sys_user.id = #{record.id,jdbcType=BIGINT},
      sys_user.login_id = #{record.loginId,jdbcType=VARCHAR},
      sys_user.`name` = #{record.name,jdbcType=VARCHAR},
      sys_user.`password` = #{record.password,jdbcType=VARCHAR},
      sys_user.mail = #{record.mail,jdbcType=VARCHAR},
      sys_user.department_id = #{record.departmentId,jdbcType=BIGINT},
      sys_user.phone = #{record.phone,jdbcType=VARCHAR},
      sys_user.permission_group = #{record.permissionGroup,jdbcType=VARCHAR},
      sys_user.`status` = #{record.status,jdbcType=VARCHAR},
      sys_user.employeeId = #{record.employeeid,jdbcType=VARCHAR},
      sys_user.rask = #{record.rask,jdbcType=VARCHAR},
      sys_user.department_code = #{record.departmentCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.perfect.trains.model.User" >
    update user
    <set >
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="permissionGroup != null" >
        permission_group = #{permissionGroup,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="employeeid != null" >
        employeeId = #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="rask != null" >
        rask = #{rask,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null" >
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.perfect.trains.model.User" >
    update user
    set login_id = #{loginId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      permission_group = #{permissionGroup,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=VARCHAR},
      employeeId = #{employeeid,jdbcType=VARCHAR},
      rask = #{rask,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>